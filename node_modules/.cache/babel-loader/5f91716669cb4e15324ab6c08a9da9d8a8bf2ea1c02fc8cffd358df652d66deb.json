{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Projects\\\\seek2\\\\src\\\\components\\\\job_categories.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['Show some love to MUI', 'Show all notification content', 'Hide sensitive notification content', 'Hide all notification content'];\nexport default function SimpleListMenu() {\n  _s();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const open = Boolean(anchorEl);\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      \"aria-label\": \"Device settings\",\n      sx: {\n        bgcolor: 'background.paper'\n      },\n      children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n        id: \"lock-button\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-controls\": \"lock-menu\",\n        \"aria-expanded\": open ? 'true' : undefined,\n        onClick: handleClickListItem,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"When device is locked\",\n          secondary: options[selectedIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"lock-menu\",\n      anchorEl: anchorEl,\n      open: open,\n      onClose: handleClose,\n      MenuListProps: {\n        'aria-labelledby': 'lock-button',\n        role: 'listbox'\n      },\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: index === 0,\n        selected: index === selectedIndex,\n        onClick: event => handleMenuItemClick(event, index),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(SimpleListMenu, \"FISXl8yJ5jG0MaBbs/L2MKn/ZjQ=\");\n_c = SimpleListMenu;\nvar _c;\n$RefreshReg$(_c, \"SimpleListMenu\");","map":{"version":3,"names":["React","List","ListItemButton","ListItemText","MenuItem","Menu","jsxDEV","_jsxDEV","options","SimpleListMenu","_s","anchorEl","setAnchorEl","useState","selectedIndex","setSelectedIndex","open","Boolean","handleClickListItem","event","currentTarget","handleMenuItemClick","index","handleClose","children","component","sx","bgcolor","id","undefined","onClick","primary","secondary","fileName","_jsxFileName","lineNumber","columnNumber","onClose","MenuListProps","role","map","option","disabled","selected","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Projects/seek2/src/components/job_categories.js"],"sourcesContent":["import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\n\r\nconst options = [\r\n  'Show some love to MUI',\r\n  'Show all notification content',\r\n  'Hide sensitive notification content',\r\n  'Hide all notification content',\r\n];\r\n\r\nexport default function SimpleListMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n  const open = Boolean(anchorEl);\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"Device settings\"\r\n        sx={{ bgcolor: 'background.paper' }}\r\n      >\r\n        <ListItemButton\r\n          id=\"lock-button\"\r\n          aria-haspopup=\"listbox\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-expanded={open ? 'true' : undefined}\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText\r\n            primary=\"When device is locked\"\r\n            secondary={options[selectedIndex]}\r\n          />\r\n        </ListItemButton>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'lock-button',\r\n          role: 'listbox',\r\n        }}\r\n      >\r\n        {options.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            disabled={index === 0}\r\n            selected={index === selectedIndex}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}