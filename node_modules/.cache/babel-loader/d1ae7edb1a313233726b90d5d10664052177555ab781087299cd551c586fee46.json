{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Projects\\\\seek2\\\\src\\\\components\\\\simpleDropDown.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport '../output.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SimpleListMenu({\n  selectedIndex,\n  setSelectedIndex,\n  options\n}) {\n  _s();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  /**/\n  /*const open = Boolean(anchorEl);*/\n  const [open, setOpen] = React.useState('hidden');\n  const [default_text, setDefault] = React.useState('default');\n  const Visible = {\n    hidden: 'hidden',\n    visible: 'absolute h-48 w-80 overflow-auto rounded-lg text-black bg-white shadow-xl'\n  };\n  const Button_text = {\n    normal: \"rounded-lg bg-whiteh-full text-base text-left hover:ring-2 ring-blue-500 focus:ring-8 focus:ring-[#7facf5] outline-none\",\n    default: \"rounded-lg text-[#9ca3af] text-base text-left bg-white h-full hover:ring-2 ring-blue-500 focus:ring-8 focus:ring-[#7facf5] outline-none\"\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n    setOpen('visible');\n  };\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    if (index === 0) {\n      setDefault('default');\n    } else {\n      setDefault('normal');\n    }\n    const buttonElement = document.getElementById(\"buttonId\");\n    buttonElement.blur();\n  };\n  const handleClose = () => {\n    setOpen('hidden');\n  };\n  var listItems = options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    class: \"\",\n    onClick: event => handleMenuItemClick(event, index),\n    children: option\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"relative\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      class: `${Button_text[default_text]}`,\n      type: \"button\",\n      id: \"buttonId\",\n      onFocus: handleClickListItem,\n      onBlur: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"p-3 w-full truncate text-nowrap overflow-hidden\",\n        children: options[selectedIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${Visible[open]}`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"\",\n          children: listItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(SimpleListMenu, \"ZvHcpyTCySnCPbwdzEtXNpubHSg=\");\n_c = SimpleListMenu;\nvar _c;\n$RefreshReg$(_c, \"SimpleListMenu\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SimpleListMenu","selectedIndex","setSelectedIndex","options","_s","anchorEl","setAnchorEl","useState","open","setOpen","default_text","setDefault","Visible","hidden","visible","Button_text","normal","default","handleClickListItem","event","currentTarget","handleMenuItemClick","index","buttonElement","document","getElementById","blur","handleClose","listItems","map","option","class","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onFocus","onBlur","className","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Projects/seek2/src/components/simpleDropDown.js"],"sourcesContent":["import * as React from 'react';\r\nimport '../output.css';\r\n\r\n\r\n\r\n\r\n\r\nexport default function SimpleListMenu ({selectedIndex, setSelectedIndex, options}) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    /**/\r\n    /*const open = Boolean(anchorEl);*/\r\n    const [open, setOpen] = React.useState('hidden')\r\n    const [default_text, setDefault] = React.useState('default')\r\n    const Visible = \r\n    {\r\n        hidden: 'hidden',\r\n        visible: 'absolute h-48 w-80 overflow-auto rounded-lg text-black bg-white shadow-xl',\r\n    }\r\n    \r\n    const Button_text = {\r\n        normal: \"rounded-lg bg-whiteh-full text-base text-left hover:ring-2 ring-blue-500 focus:ring-8 focus:ring-[#7facf5] outline-none\",\r\n        default: \"rounded-lg text-[#9ca3af] text-base text-left bg-white h-full hover:ring-2 ring-blue-500 focus:ring-8 focus:ring-[#7facf5] outline-none\",\r\n    }\r\n    \r\n\r\n    const handleClickListItem = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n      setOpen('visible')\r\n    };\r\n  \r\n    const handleMenuItemClick = (event, index) => {\r\n      setSelectedIndex(index);\r\n      setAnchorEl(null);\r\n      if (index === 0) {\r\n        setDefault('default')\r\n      } else {\r\n        setDefault('normal')\r\n      }\r\n      const buttonElement = document.getElementById(\"buttonId\");\r\n      buttonElement.blur()\r\n    \r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen('hidden')\r\n    };\r\n\r\n    var listItems = options.map((option, index) => \r\n        <li class=\"\"onClick={(event) => handleMenuItemClick(event, index)}>{option}\r\n            </li>\r\n    );\r\n\r\n    return (\r\n        <div class=\"relative\">\r\n            <button class={`${Button_text[default_text]}`} type=\"button\" id=\"buttonId\" onFocus={handleClickListItem} onBlur={handleClose}>\r\n                <div class=\"p-3 w-full truncate text-nowrap overflow-hidden\">{options[selectedIndex]}</div>\r\n                <div className={`${Visible[open]}`}>\r\n                <ul class=\"\">{listItems}</ul>\r\n            </div>\r\n                </button>\r\n            \r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}